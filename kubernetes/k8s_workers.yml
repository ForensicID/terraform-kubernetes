- hosts: masters
  remote_user: user
  become: yes
  become_method: sudo
  become_user: root

  tasks:
    - name: Get the token for joining the nodes with Kubernetes master
      shell: kubeadm token create --print-join-command
      register: kubernetes_join_command

    - name: Debug Kubernetes join command
      debug:
        msg: "{{ kubernetes_join_command.stdout }}"

    - name: Construct the join command with ignore preflight errors
      set_fact:
        join_command: "{{ kubernetes_join_command.stdout.strip() }} --ignore-preflight-errors=all"

    - name: Copy join command to local file
      ansible.builtin.copy:
        content: "{{ join_command }}"
        dest: "/tmp/kubernetes_join_command"
        mode: '0777'
        owner: "root"
        group: "root"

- hosts: workers
  remote_user: user
  become: yes

  tasks:
    - name: Ensure file is removed
      ansible.builtin.file:
        path: "/tmp/kubernetes_join_command"
        state: absent

    - name: Copy join command to worker nodes
      ansible.builtin.copy:
        src: /tmp/kubernetes_join_command
        dest: /tmp/kubernetes_join_command
        mode: '0777'
        owner: "root"
        group: "root"

    - name: Menambahkan perintah ke /tmp/kubernetes_join_command
      shell: echo "--ignore-preflight-errors=all" >> /tmp/kubernetes_join_command

    - name: Debug join command file content
      ansible.builtin.command:
        cmd: cat /tmp/kubernetes_join_command
      register: join_command_content

    - name: Debug join command content
      debug:
        msg: "{{ join_command_content.stdout }}"

    - name: Join the worker nodes with the master
      shell: "sh /tmp/kubernetes_join_command"
      register: joined_or_not

    - name: Debug join command execution result
      debug:
        msg: "{{ joined_or_not.stdout }}"

- hosts: masters
  remote_user: user
  become: yes

  tasks:
    - name: Configure kubectl command auto-completion
      lineinfile:
        dest: /root/.bashrc
        line: 'source <(kubectl completion bash)'